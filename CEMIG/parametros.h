/*
 * parametros.h
 *
 *  Created on: 22/05/2015
 *      Author: Joao
 */

#ifndef PARAMETROS_H_
#define PARAMETROS_H_

/****************************************************************************************************
 ******************************************* Execução ***********************************************
 ****************************************************************************************************/
#define DEBUG 1
/***************************************************************************************************/


/****************************************************************************************************
 ******************************************** Sinais ************************************************
 ****************************************************************************************************/

//Quantidade de amostras/ciclo (obs.: necessita reconfiguração de disparo do ADC)
#define BUFFER_SIZE 256
#define BUFFER_SIZE_BIT 8

//Quantidade de valores RMS na media
#define RMS_HISTORICO_SIZE 64
#define RMS_HISTORICO_SIZE_BIT 6

//Valores calibrados -  Todos em ADCrms^2
#define I_CURTO 0xFFFF //(corrente de curto*4095/3.0)^2
#define V_SET 0xFFFF //(tensao desejada*4095/3.0)^2 (SET_POINT)

#define V_BAT_ref 0x0 //tensao de bateria para funcionamento.

// Não necessário
//#define BOXFILTER_N 7
//#define BOXFILTER_N_BIT 3
/***************************************************************************************************/




/****************************************************************************************************
 *********************************************** ADC  ***********************************************
 ****************************************************************************************************/

//Configuração do tempo de conversão
//Tempo de Conversao = sampling/clock
//Sampling 16 ciclos - Clock 25MHz -> Tempo = 640ns/conversão
#define ADC_MODCLK 0x3 // HSPCLK = SYSCLKOUT/2*ADC_MODCLK2 = 150/(2*3)   = 25.0 MHz
#define ADC_CPS	   0    //  ADC module clock Pre-scaler = 0 ->  ADC module clock = HSPCLK = 25MHz
#define ADC_CKPS   0x0   // ADC module clock Divider = 0 -> ADC module clock = HSPCLK   = 25.0MHz/(1) = 25MHz
#define ADC_SHCLK  0xf   // S/H width in ADC module periods                        = 16 ADC clocks

/***************************************************************************************************/




/****************************************************************************************************
 **************************************** LEDS e Alertas ********************************************
 ****************************************************************************************************/
#define LED_APAGADO 0
#define LED_ACESO 1
#define LED_PISCANDO 2
/***************************************************************************************************/




/****************************************************************************************************
 ********************************************** PWM *************************************************
 ****************************************************************************************************/
#define PERIODO_PWM 9766 //Periodo do PWM = Fclk/(Fpwm*DIVs) - 150e6/(60*256)
#define ESCALA 219894 // Escala aplicada ao valor de pico seno (2^30) = 2^30 /(PERIODO_PWM/2)
#define DEAD_BAND 0 // PERIODO_PWM = 100%
#define PASSO_DIVISOR 0.01 //Passo da Rampa de Tensão
/***************************************************************************************************/




/****************************************************************************************************
 ************************************* Outros *******************************************************
 ****************************************************************************************************/
#define ESTADO_PARADO 0
#define ESTADO_RAMPA 1
#define ESTADO_MED 2
#define ESTADO_CALC 3
/***************************************************************************************************/




#endif /* PARAMETROS_H_ */
